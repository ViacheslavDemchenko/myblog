;
(function () {

    const text = [
        'Веб-разработчик — человек, превращающий кофеин в программное обеспечение',
        'Количество кодеров и их профессионализм растут экспоненциально, правда природа обгоняет их — по созданию тупых пользователей',
        'Если программа заработала с первого раза, значит что-то не так точно',
        'Если по вашей программе никто не звонит с вопросами, значит ей уже никто не пользуется',
        'Даже в работающей программе есть ошибки. Просто вы на них еще не наткнулись',
        'Опытный разработчик всегда посмотрит направо и налево, даже если переходит улицу с односторонним движением',
        'Пишите свой код так, как-будто его будет использовать маньяк-психопат, который знает, где вы живете',
        'Зачем нужно плохое ПО? Без него у многих программистов не будет работы',
        'Основные изменения в новой версии программы: исправлены старые баги, добавлены новые',
        'Программирование похоже на секс: одна ошибка — и всю жизнь придется поддерживать',
        'Написание комментариев в коде чем-то похоже на мытье унитаза — крайне неприятно, совсем не хочется этого делать, но необходимо, чтобы не опозориться перед гостями',
        'Если бы строители работали так же, как программисты кодят, то любая птица, присевшая отдохнуть на крыше дома, могла бы стать причиной гибели цивилизации',
        'Существует два вида языков программирования: одни — все ругают, другими не пользуются',
        'Пока компьютеры не умеют мыслить самостоятельно, им можно доверять',
        'Программирование состоит на 10% из строгой науки, на 20% из смекалки и вдохновения, и на 70% из попыток совместить первое со вторым',
        'Что вы знаете о трудном детстве? Какие там скользкие подоконники? Вот килобайтные игрушки — это и правда страшно',
        'Если вы начинаете сгонять муху с монитора при помощи курсора мыши, пора выключать компьютер',
        'Самый страшный вирус современности — не программный код, он сидит за компьютером и называется пользователь',
        'Бог сумел создать целый мир всего за 6 дней по единственной причине — у него не было предыдущих версий и проблем совместимости',
        'Отладка – это удаление из программного кода различных багов. Значит, программирование — это создание и добавление этих самых багов в код?',
        'Никогда не пишите на пределе своих талантов! Помните: отладка — всегда в два раза сложнее написания кода. И если вы напишете настолько умно, насколько способны, отладить его вы уже не сумеете',
        'На самом деле большинство багов — это фичи, просто не задокументированные',
        'IT-шник – это ориентация или все же диагноз?',
        'Основная цель любой разработки — построить что-то такое, что простоит хотя бы до момента завершения стройки',
        'Финальный релиз программного обеспечения не выйдет до тех пор, пока жив хотя бы один пользователь',
        'Для IT-шника рабочим столом является монитор, журнальным — системный блок, а клавиатура — обеденным',
        'Всем знаком этап «бета-тестирования» софта перед официальным релизом. Но мало кто знает, что «бета» с латыни переводится «до сих пор не работает»',
        'Современное программное обеспечение напоминает египетские пирамиды. Миллионы блоков как-то стоят друг на друге без какой-то целостности конструкции, но с помощью каторжного труда тысяч рабов',
        'Программисты стараются сделать код, рассчитанный на любого идиота. Вселенная плодит новые разновидности идиотов. Пока что Вселенная побеждает всухую'
    ];

    function getRandomText(arr) {
        let randomText = Math.round(Math.random() * (arr.length - 1) + 0);
        return randomText;
    };

    function typeText(arr, count, textOut) {
        let letter = 0;
        let out = '';

        function typeLine() {

            let interval = setTimeout(() => {
                out += arr[count][letter];
                textOut.innerHTML = `${out}|`;
                letter++;

                if (letter >= arr[count].length) {
                    textOut.innerHTML = `${out}`;
                    clearTimeout(interval);
                    return false;
                }
                typeLine();
            }, getRandomInt(getRandomInt(100 * 3)));
        }
        typeLine();
    }

    function getRandomInt(max) {
        return Math.floor(Math.random() * Math.floor(max));
    }

    // typeText(text, getRandomText(text), document.querySelector('.quotes-text'));




    // Запуск функции печати текста после появления соответствующего блока на экране через скролл
    let element = document.querySelector('.quotes-text');

    function checkDialogVisible(target) {
        // Все позиции элемента
        let targetPosition = {
                top: window.pageYOffset + target.getBoundingClientRect().top,
                left: window.pageXOffset + target.getBoundingClientRect().left,
                right: window.pageXOffset + target.getBoundingClientRect().right,
                bottom: window.pageYOffset + target.getBoundingClientRect().bottom
            },
            // Получаем позиции окна
            windowPosition = {
                top: window.pageYOffset,
                left: window.pageXOffset,
                right: window.pageXOffset + document.documentElement.clientWidth,
                bottom: window.pageYOffset + document.documentElement.clientHeight
            };

        if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
            targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
            targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
            targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
            // Если элемент полностью видно, то запускаем следующий код
            return true;
        }
    };

    // Снимаем обработчик события после совершения действия или выполнения условия
    let handler = function (event) {
        if (checkDialogVisible(element)) {
            typeText(text, getRandomText(text), document.querySelector('.quotes-text'));
            window.removeEventListener('scroll', handler);
        }
    };
    window.addEventListener('scroll', handler);

    // А также запустим функцию печати текста сразу. А то вдруг, элемент изначально видно
    if (checkDialogVisible(element)) {
        typeText(text, getRandomText(text), document.querySelector('.quotes-text'));
        window.removeEventListener('scroll', handler);
    }

})();